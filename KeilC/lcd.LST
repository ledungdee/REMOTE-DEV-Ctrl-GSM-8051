C51 COMPILER V9.60.0.0   LCD                                                               06/12/2022 01:40:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN lcd.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <REGX52.H>
   2          #include <main.h>
   3          #include <lcd.h>
   4          
   5          #define LCD_RS  P1_3
   6          #define LCD_RW  P1_2
   7          #define LCD_EN  P1_1
   8          #define LCD_D4  P1_4
   9          #define LCD_D5  P1_5
  10          #define LCD_D6  P1_6
  11          #define LCD_D7  P1_7
  12          
  13          
  14          
  15          void delay_us(unsigned int t)
  16              {
  17   1              unsigned int i;
  18   1              for(i=0;i<t;i++);
  19   1          }
  20          void delay_ms(unsigned int t)
  21              {
  22   1              unsigned int i,j;
  23   1              for(i=0;i<t;i++)
  24   1              for(j=0;j<124;j++);
  25   1          }
  26          /***********Ctr giao tiep LCD 16x2 4bit**********************/
  27          
  28          void LCD_Enable(void)
  29              {
  30   1              LCD_EN =1;
  31   1              delay_us(3);
  32   1              LCD_EN =0;
  33   1              delay_us(50); 
  34   1          }
  35          //Ham Gui 4 Bit Du Lieu Ra LCD
  36          void LCD_Send4Bit(unsigned char Data)
  37              {
  38   1              LCD_D4=Data & 0x01;
  39   1              LCD_D5=(Data>>1)&1;
  40   1              LCD_D6=(Data>>2)&1;
  41   1              LCD_D7=(Data>>3)&1;
  42   1          }
  43          // Ham Gui 1 Lenh Cho LCD
  44          void LCD_SendCommand(unsigned char command)
  45              {
  46   1              LCD_Send4Bit(command >>4);/* Gui 4 bit cao */
  47   1              LCD_Enable();
  48   1              LCD_Send4Bit(command); /* Gui 4 bit thap*/
  49   1              LCD_Enable();
  50   1          }
  51          // Ham Xoa Man Hinh LCD
  52          void LCD_Clear()
  53              {
  54   1              LCD_SendCommand(0x01); 
  55   1              delay_us(10);
C51 COMPILER V9.60.0.0   LCD                                                               06/12/2022 01:40:52 PAGE 2   

  56   1          }
  57          // Ham Khoi Tao LCD
  58          void LCD_Init()
  59              {
  60   1              LCD_Send4Bit(0x00);   //turn on LCD
  61   1              delay_ms(20);
  62   1              LCD_RS=0;
  63   1              LCD_RW=0;
  64   1              LCD_Send4Bit(0x03);   //function setting
  65   1              LCD_Enable();
  66   1              delay_ms(5);
  67   1              LCD_Enable();
  68   1              delay_us(100);
  69   1              LCD_Enable();
  70   1              LCD_Send4Bit(0x02);   //di chuyen con tro ve dau man hnh
  71   1              LCD_Enable();
  72   1              LCD_SendCommand( 0x28 ); //lua chon che do 4 bit
  73   1              LCD_SendCommand( 0x0c);  // bat hien thi va tat con tro di
  74   1              LCD_SendCommand( 0x06 );
  75   1              LCD_SendCommand(0x01);
  76   1          }
  77          void LCD_Gotoxy(unsigned char x, unsigned char y)
  78              {
  79   1              unsigned char address;
  80   1              if(!y)address=(0x80+x);
  81   1              else address=(0xc0+x);
  82   1              delay_us(1000);
  83   1              LCD_SendCommand(address);
  84   1              delay_us(50);
  85   1          }
  86          void LCD_PutChar(unsigned char Data)
  87              {
  88   1              LCD_RS=1;
  89   1              LCD_SendCommand(Data);
  90   1              LCD_RS=0 ;
  91   1          }
  92          void LCD_Puts(char *s)
  93              {
  94   1              while (*s)
  95   1                {
  96   2                      LCD_PutChar(*s);
  97   2                      s++;
  98   2                }
  99   1          }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    271    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
